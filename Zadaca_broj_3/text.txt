
Zadatak 3.1
          MultiSkupStvori datoteku multiskup.py
          Napravi klasu MultiSkup koja će za razliku od klasičnog skupa imati više istih elemenata.
          Na primjer{1,1,2,2,2,3,3,4} je multiskup od 8 elemenata gdje se 1 pojavljuje 2 puta,
          2 se pojavljuje 3 puta, 3 se pojavljuje2 puta, a 4 jedan put.
          Kako bi znali koliko puta se određeni element javlja u multiskupu,
          koristit ćemo rječnikčiji će ključevi biti elementi, a vrijednosti broj pojavljivanja elemenata.
          Napravi __init__() metodu multiskupa koja primita kolekciju elemenata (None ako se ne prenese).
          Napravi specijalnu medotu __str__() koja će ispisati stringovnu reprezentaciju skupa oblika{{element*broj_pojavljivanja,
          element*broj_pojavljivanja, ...}}.
          Na primjer, za multiskup {1,1,2,2,2,3,3,4}stringovna reprezentacija će vratiti
          {{1*2, 2*3, 3*2, 4*1}}print('*** test 1 ***')a =MultiSkup([1,1,2,2,2,3,3,4])print(a)*** test 1 ***{{1*2, 2*3, 3*2, 4*1}}




Zadatak 3.2 -
          MultiSkupNapravi specijalnu metodu __iter__() koja će služiti za iteraciju multiskupa.
          Napravi specijalnu metodu __repr__() koja će vratiti reprezentaciju skupa.
          Prilikom izrade reprezentacijemultiskupa parametre predstavi kao
          listu.print('*** test 2 ***')a =MultiSkup([1,1,2,2,2,3,3,4])
          for el in a:print(el)print(repr(a))11222334MultiSkup([1, 1, 2, 2, 2, 3, 3, 4])

Zadatak 3.3 -
          MultiSkupNapravi metodu add() koja će dodavati element određeni broj puta.
          Ako broj ponavljanja nije prenesen ondaje on
          1.Napravi metodu remove() koja će brisati element određeni broj puta.
          Ako broj ponavljanja nije prenesenonda je on 1.print('*** test 3 ***')a =MultiSkup([1,1,2,2,2,3,3,4])a.add(4)print(a)a.add(2,3)3.
          Zadaci1 of 2
          print(a)a.remove(4,2)print(a)*** test 3 ***{{1*2, 2*3, 3*2, 4*2}}{{1*2, 2*6, 3*2, 4*2}}{{1*2, 2*6, 3*2}}3. Zadaci2 of 2
